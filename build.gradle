plugins {
    id("groovy") 
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "2.0.6"
}

group = "the.primer"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("the.primer.*")
    }
}

dependencies {
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.groovy:micronaut-runtime-groovy")
    implementation("javax.annotation:javax.annotation-api")
    compileOnly("io.micronaut:micronaut-http-validation")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    implementation("com.google.code.gson:gson:2.8.5")
    implementation("com.google.zxing:core:3.3.0")
    implementation("com.google.zxing:javase:3.3.0")
    implementation("com.squareup.okhttp3:okhttp:4.10.0")
    implementation("org.codehaus.groovy:groovy-json:3.0.11")
}

application {
    mainClassName = project.hasProperty("mainClass") ? project.getProperty("mainClass") : "the.primer.Application"
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

test {
    testLogging {
        showStandardStreams = true
        events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
    }
}

task generateSources {
    def outputDir = file("$buildDir/generated-src")
    outputs.dir outputDir
    doFirst {
        def srcFile = new File(outputDir, "the/primer/Version.java")
        srcFile.parentFile.mkdirs()
        srcFile.write(""" package the.primer; public class Version { public static String getVersion() { return "${project.version}"; }}""")
    }
}

compileJava.dependsOn generateSources
compileJava.source generateSources.outputs.files, sourceSets.main.java

dockerBuild {
    images = ["public.ecr.aws/k4d8q0b2/the-primer:${project.version}"]
}

